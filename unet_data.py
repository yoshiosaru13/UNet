# -*- coding: utf-8 -*-
"""unet_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tTDfi3Wsaqjp0U5BmMcDXttJ5EWafCns
"""

import numpy as np
import tensorflow as tf
import keras
from keras import layers, Sequential, Input
from keras.models import Model
from keras.preprocessing.image import ImageDataGenerator
from keras.utils import plot_model

import glob
import os
import matplotlib.pyplot as plt
from PIL import Image

X = []
images = glob.glob('data/train/image/*.png')
images.sort()

for image in images:
    im = Image.open(image)
    im = im.resize((256, 256))
    im_arr = np.array(im)
    X.append(im_arr)

X = np.array(X)

y = []
masks = glob.glob('data/train/label/*.png')
masks.sort()

for mask in masks:
    mk = Image.open(mask)
    mk = mk.resize((256, 256))
    mk_arr = np.array(mk)
    onehot_mk = np.eye(2)[mk_arr]
    y.append(onehot_mk)

y = np.array(y)

X_test = []
test_images = glob.glob('data/val/image/*.png')
test_images.sort()

for img in test_images:
    ti = Image.open(img)
    ti = ti.resize((256, 256))
    ti_arr = np.array(ti)
    X_test.append(ti_arr)

X_test = np.array(X_test)

y_test = []
y_test_images = glob.glob('data/val/label/*.png')
y_test_images.sort()

for im in y_test_images:
    y_im = Image.open(im)
    y_im = y_im.resize((256, 256))
    y_im_arr = np.array(y_im)
    onehot_y = np.eye(2)[y_im_arr]
    y_test.append(onehot_y)

y_test = np.array(y_test)
